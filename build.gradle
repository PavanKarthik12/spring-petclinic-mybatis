buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
  id "org.sonarqube" version "2.7"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'org.springframework.samples'
version = '1.5.7'
sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-security')

    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.boot:spring-boot-starter-cache')

    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    compile('org.springframework.data:spring-data-jdbc-core:' + springDataJdbcVersion) {
        exclude group: 'org.springframework', module:'*'
    }
    compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2")

    compile('com.fasterxml.jackson.core:jackson-core')
    compile('com.fasterxml.jackson.core:jackson-databind')
    compile('javax.xml.bind:jaxb-api:' + jaxbApiVersion)

    compile('io.springfox:springfox-swagger2:' + springfoxSwaggerVersion)
    compile('io.springfox:springfox-swagger-ui:' + springfoxSwaggerVersion)

    runtime('org.hsqldb:hsqldb')
    runtime('mysql:mysql-connector-java')
    runtime('org.postgresql:postgresql')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
	testCompile("ch.vorburger.mariaDB4j:mariaDB4j-springboot:2.4.0")
    testCompile('org.mockito:mockito-core')
    testCompile('org.hamcrest:hamcrest-all:' + hamcrestVersion)
    testCompile('com.jayway.jsonpath:json-path')
}

wrapper {
    version = '4.8'
}

eclipse {
    classpath {
        downloadJavadoc = true
        downloadSources = true
    }
}

// enable remote debug
bootRun {
//  jvmArgs=["-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5050"]
}

